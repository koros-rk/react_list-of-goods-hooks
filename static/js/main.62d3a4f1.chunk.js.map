{"version":3,"sources":["App.tsx","index.tsx"],"names":["SORT","goodsFromServer","App","useState","DEFAULT","sortType","setSortType","isReverse","setIsReverse","preparedGoods","goods","sort","item1","item2","ALPHABET","localeCompare","LENGTH","length","reverse","prepareGoods","className","type","cn","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,kBAAAA,E,gBAAAA,E,YAAAA,M,KAWL,IA0BaE,EAAgB,WAC3B,MAAgCC,mBAAeH,EAAKI,SAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EA7Ba,SAACC,EAAD,GAGN,IAFbL,EAEY,EAFZA,SACAE,EACY,EADZA,UAEME,EAAa,YAAOC,GAmB1B,OAjBIL,GACFI,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EAAKc,SACR,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAAKgB,OACR,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXV,GACFE,EAAcS,UAGTT,EAMeU,CAAalB,EAAiB,CAClDI,WACAE,cAQF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAaL,EAAKc,WAEhCS,QAAS,kBAAMjB,EAAYN,EAAKc,WALlC,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAaL,EAAKgB,SAEhCO,QAAS,kBAAMjB,EAAYN,EAAKgB,SALlC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAcD,IAL/B,qBAWEF,IAAaL,EAAKI,SAAWG,EAEzB,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA5CA,WACZjB,EAAYN,EAAKI,SACjBI,GAAa,IAuCH,mBAQA,QAIR,6BAEIC,EAAce,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCpH5DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.62d3a4f1.chunk.js","sourcesContent":["import './App.scss';\nimport 'bulma/css/bulma.css';\n\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SORT {\n  ALPHABET = 'a-to-z',\n  LENGTH = 'length',\n  DEFAULT = '',\n}\n\ninterface Params {\n  sortType: SORT\n  isReverse: boolean\n}\n\nconst prepareGoods = (goods: string[], {\n  sortType,\n  isReverse,\n}: Params) => {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((item1, item2) => {\n      switch (sortType) {\n        case SORT.ALPHABET:\n          return item1.localeCompare(item2);\n        case SORT.LENGTH:\n          return item1.length - item2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SORT>(SORT.DEFAULT);\n  const [isReverse, setIsReverse] = useState(false);\n  const preparedGoods = prepareGoods(goodsFromServer, {\n    sortType,\n    isReverse,\n  });\n\n  const reset = () => {\n    setSortType(SORT.DEFAULT);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortType !== SORT.ALPHABET,\n          })}\n          onClick={() => setSortType(SORT.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType !== SORT.LENGTH,\n          })}\n          onClick={() => setSortType(SORT.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReverse,\n          })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {\n          sortType !== SORT.DEFAULT || isReverse\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            )\n            : null\n        }\n      </div>\n\n      <ul>\n        {\n          preparedGoods.map(item => <li data-cy=\"Good\" key={item}>{item}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}